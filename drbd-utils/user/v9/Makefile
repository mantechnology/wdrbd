# Makefile for drbd.o
#
# This file is part of DRBD by Philipp Reisner and Lars Ellenberg.
#
# drbd is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# drbd is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with drbd; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
#

VPATH = ../../../drbd-headers:../shared

# variables set by configure
DISTRO = redhat
prefix = /usr
exec_prefix = /usr
localstatedir = /var
datarootdir = /usr/share
datadir = /usr/share
sbindir = /usr/sbin
sysconfdir = /etc
BASH_COMPLETION_SUFFIX = 
UDEV_RULE_SUFFIX = 
INITDIR = /etc/rc.d/init.d
LIBDIR = /usr/lib/drbd
CC = gcc
CFLAGS = -g -O2
LDFLAGS = 
LN_S = ln -s

DRBD_LIB_DIR = /var/lib/drbd
DRBD_RUN_DIR = /var/run/drbd
DRBD_LOCK_DIR = /var/lock
DRBD_CONFIG_DIR = /etc

# features enabled or disabled by configure
WITH_83_SUPPORT = yes
WITH_84_SUPPORT = yes
WITH_UDEV = yes
WITH_XEN = yes
WITH_PACEMAKER = yes
WITH_RGMANAGER = no
WITH_BASHCOMPLETION = yes

# for some reason some of the commands below only work correctly in bash,
# and not in e.g. dash. I'm too lazy to fix it to be compatible.
SHELL=/bin/bash

# variables meant to be overridden from the make command line
DESTDIR ?= /

CFLAGS += -Wall -I../../../drbd-headers -I.. -I. -I../shared -I../../../wdrbd9

# DW-1719: Detect os
is_win32 =

ifeq '$(findstring ;,$(PATH))' ';'
	is_win32 = yes
else
    UNAME := $(shell uname 2>/dev/null || echo Unknown)
    UNAME := $(patsubst CYGWIN%,Cygwin,$(UNAME))

	ifeq ($(UNAME), Cygwin)
		is_win32 = yes
	endif
endif

ifdef is_win32
	# _WIN32
	# _WIN32_V9 for 9.0.0 porting.
	# _WIN32_CLI_UPDATE for updated cygwin version (2.10.0)
	ifdef x64
		CFLAGS += -gdwarf-2 -g3 -D_WIN32 -Dx64  -D_WIN32_APP  -D_WIN32_V9  -D_WIN32_CLI_UPDATE
	else
		CFLAGS += -gdwarf-2 -g3 -D_WIN32  -D_WIN32_APP  -D_WIN32_V9  -D_WIN32_CLI_UPDATE
	endif
endif

#ifndef _WIN32
#GENETLINK_H := /usr/include/linux/genetlink.h
#libgenl.o: CFLAGS += $(shell for w in CTRL_ATTR_VERSION CTRL_ATTR_HDRSIZE CTRL_ATTR_MCAST_GROUPS; do grep -qw $$w $(GENETLINK_H) && echo -DHAVE_$$w; done)

drbdadm-obj = drbdadm_scanner.o drbdadm_parser.o drbdadm_postparse.o \
	      drbdadm_main.o drbdadm_adjust.o drbdadm_dump.o drbdtool_common.o \
	      drbdadm_usage_cnt.o drbd_buildtag.o registry.o config_flags.o \
	      libgenl.o drbd_nla.o shared_tool.o shared_main.o shared_parser.o

drbdsetup-obj = libgenl.o registry.o drbdsetup.o drbdtool_common.o \
		drbd_buildtag.o drbd_strings.o config_flags.o drbd_nla.o \
		wrap_printf.o drbdsetup_colors.o shared_tool.o

drbdmeta-obj = drbdmeta.o drbdmeta_scanner.o drbdtool_common.o drbd_buildtag.o \
	       drbd_strings.o shared_tool.o

all-obj := $(drbdadm-obj) $(drbdsetup-obj) $(drbdmeta-obj)

all: tools

include ../shared_prereqs.mk

tools: drbdadm drbdmeta drbdsetup

drbdadm: $(drbdadm-obj)
	$(LINK.c) $(LDFLAGS) -o $@ $^

drbdadm_scanner.c: drbdadm_scanner.fl drbdadm_parser.h
	flex -s -odrbdadm_scanner.c drbdadm_scanner.fl

drbdsetup: $(drbdsetup-obj)
	$(LINK.c) $(LDFLAGS) -o $@ $^

drbdmeta: $(drbdmeta-obj)
	$(LINK.c) $(LDFLAGS) -o $@ $^

clean:
	rm -f drbdadm_scanner.c
	rm -f drbdsetup drbdadm drbdmeta $(all-obj)
	rm -f drbd_strings.c drbd_strings.h
	rm -f *~

distclean: clean
	rm -f $(all-dep)

install:
	install -d $(DESTDIR)$(sbindir)
	install -d $(DESTDIR)$(localstatedir)/lib/drbd
	install -d $(DESTDIR)$(localstatedir)/lock
	if getent group haclient > /dev/null 2> /dev/null ; then	\
		install -g haclient -m 4750 drbdsetup $(DESTDIR)$(sbindir) ;	\
		install -g haclient -m 4750 drbdmeta $(DESTDIR)$(sbindir) ;	\
		install -m 755 drbdadm $(DESTDIR)$(sbindir) ;		\
	else								\
		install -m 755 drbdsetup $(DESTDIR)$(sbindir) ;		\
		install -m 755 drbdmeta $(DESTDIR)$(sbindir) ;		\
		install -m 755 drbdadm $(DESTDIR)$(sbindir) ;		\
	fi
	if test -d $(DESTDIR)/sbin && \
	 ! test $(DESTDIR)/sbin -ef $(DESTDIR)$(sbindir) ; then		\
		ln -sf $(sbindir)/drbdsetup $(DESTDIR)/sbin ;		\
		ln -sf $(sbindir)/drbdmeta $(DESTDIR)/sbin ;		\
		ln -sf $(sbindir)/drbdadm $(DESTDIR)/sbin ;		\
	fi
	install -d $(DESTDIR)$(DRBD_LIB_DIR)

uninstall:
	rm -f $(DESTDIR)$(sbindir)/{drbdsetup,drbdadm,drbdmeta}
	rm -f $(DESTDIR)/sbin/{drbdsetup,drbdadm,drbdmeta}

spell:
	for f in drbdadm_adjust.c drbdadm_main.c drbdadm_parser.c drbdadm_usage_cnt.c drbdmeta.c drbdsetup.c drbdtool_common.c; do \
	 	aspell --save-repl --dont-backup --personal=./../documentation/aspell.en.per check $$f; \
	done
